{"version":3,"sources":["components/background.js","components/projects/grip.js","components/projects/projects.js","components/programLang/programLang.js","App.js","serviceWorker.js","index.js"],"names":["Background","react_default","a","createElement","className","src","alt","id","Grip","style","font-weight","class","href","target","Projects","grip","ProgramLang","App","background","react_router_dom","to","textDecoration","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.feea8b7d.chunk.js","sourcesContent":["import React from 'react';\nimport '../App.scss';\nconst Background = () => {\n\treturn (\n\t\t<div className=\"background-container\">\n\t\t\t<div className=\"background-content\">\n\t\t\t\t<img className=\"profile-image\" src=\"/images/profile\" alt=\"Profile\" />\n\t\t\t\t<ul>\n\t\t\t\t\t<li id=\"text\" className=\"list-item\">\n\t\t\t\t\t\tHighSchool: Korea International School\n\t\t\t\t\t</li>\n\t\t\t\t\t<li id=\"text\" className=\"list-item\">\n\t\t\t\t\t\tUniversity: University of Washington, Seattle\n\t\t\t\t\t</li>\n\t\t\t\t\t<li id=\"text\" className=\"list-item\">\n\t\t\t\t\t\tMajor: Informatics\n\t\t\t\t\t</li>\n\t\t\t\t\t<li id=\"text\" className=\"list-item\">\n\t\t\t\t\t\tPosition: FullStack Developer\n\t\t\t\t\t</li>\n\t\t\t\t\t<li id=\"text\" className=\"list-item\">\n\t\t\t\t\t\tFluent in both Korean and English\n\t\t\t\t\t</li>\n\t\t\t\t\t<li id=\"text\" className=\"list-item\">\n\t\t\t\t\t\tLoves music, knows how to compose with logic, and play guitar\n\t\t\t\t\t</li>\n\t\t\t\t\t<li id=\"text\" className=\"list-item\">\n\t\t\t\t\t\tEnjoys weight training and swimming\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Background;\n\n\t\t\t// <h2 className=\"background\" id=\"header\">\n\t\t\t// \tBackground\n\t\t\t// </h2>","import React from 'react';\n\nconst Grip = () => {\n\treturn (\n\t\t<div id=\"grip\">\n\t\t\t<div className=\"projects-item\">\n\t\t\t\t<h3 className=\"projects-header\" id=\"header\" style={{'font-weight': 'bold'}}>\n\t\t\t\t\tGRIP\n\t\t\t\t</h3>\n\t\t\t\t<p id=\"text\">\n\t\t\t\t\tDeveloped full-stack mobile application, GRIP, which helps users to get track\n\t\t\t\t\tand motivated on their pullup exercise.\n\t\t\t\t</p>\n\t\t\t\t<p id=\"text\" style={{'font-weight': 'bold'}}>Tech stacks used [FRONT]:</p>\n\n\t\t\t\t<ul>\n\t\t\t\t\t<li id=\"text\" className=\"list-item\">\n\t\t\t\t\t\tReact: Javascript Library to create nice user interface. Of course used\n\t\t\t\t\t\tJavascript to create UI interactive.\n\t\t\t\t\t</li>\n\t\t\t\t\t<li id=\"text\" className=\"list-item\">\n\t\t\t\t\t\tReact-Native: General Front-End framework used.\n\t\t\t\t\t</li>\n\t\t\t\t\t<li id=\"text\" className=\"list-item\">\n\t\t\t\t\t\tRedux: To control various states such as user's login token, user's pull-up\n\t\t\t\t\t\texercise information, interactive design state, etc\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li id=\"text\" className=\"list-item\">\n\t\t\t\t\t\t\t\tRedux-Saga: Used to control asynchronous states such as RESTful API call to\n\t\t\t\t\t\t\t\trecieve data from backend\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li id=\"text\" className=\"list-item\">\n\t\t\t\t\t\t\t\tDev-tools: To monitor many states controlled by redux in Chrome browser\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li id=\"text\" className=\"list-item\">\n\t\t\t\t\t\tLodash: Module to control data input from user's data such as exercise\n\t\t\t\t\t\tsummary, private information, etc.\n\t\t\t\t\t</li>\n\t\t\t\t\t<li id=\"text\" className=\"list-item\">\n\t\t\t\t\t\tAxios: Module to call various backend API endpoint programmed by me.\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\n\t\t\t\t<p id=\"text\" style={{'font-weight': 'bold'}}>Tech stacks used [BACK]:</p>\n\t\t\t\t<ul>\n\t\t\t\t\t<li id=\"text\" className=\"list-item\">\n\t\t\t\t\t\tExpress: Used to build API endpoint to ensure frontend api call succeeds.\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li id=\"text\" className=\"list-item\">\n\t\t\t\t\t\t\t\tAPI endpoint: created private user authentication endpoints, user's\n\t\t\t\t\t\t\t\tpullup-exercise data manipulation based on frontend input.\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li id=\"text\" className=\"list-item\">\n\t\t\t\t\t\t\t\tError handling: made sure it handles whenever api call goes wrong\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li id=\"text\" className=\"list-item\">\n\t\t\t\t\t\tFor Authentication:\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li id=\"text\" className=\"list-item\">\n\t\t\t\t\t\t\t\tbcryt: used to ensure safe authentication by encrypting user's\n\t\t\t\t\t\t\t\tpassword with hashcode. Only pushed encrypted hashed password into\n\t\t\t\t\t\t\t\tdatabase for security.\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li id=\"text\" className=\"list-item\">\n\t\t\t\t\t\t\t\tJson-Web-Token: used to create registration and private data system\n\t\t\t\t\t\t\t\tfor users\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li id=\"text\" className=\"list-item\">\n\t\t\t\t\t\t\t\tjwt-express: used as middleware in private api call to ensure that\n\t\t\t\t\t\t\t\tposted token from frontend is a valid jwt token, then it sets\n\t\t\t\t\t\t\t\trequest's user in http with vaild user data such as userId, email,\n\t\t\t\t\t\t\t\tetc.\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li id=\"text\" className=\"list-item\">\n\t\t\t\t\t\t\t\tJoi: Used in login-system to restric user email and password when\n\t\t\t\t\t\t\t\the/her signup or login.\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li id=\"text\" className=\"list-item\">\n\t\t\t\t\t\t\t\tuuid: Used to create unique id for each users to distinguish in\n\t\t\t\t\t\t\t\tdatabase.\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li id=\"text\" className=\"list-item\">\n\t\t\t\t\t\t\t\tnodemailer: Connected with my google account with nodemailer to send\n\t\t\t\t\t\t\t\tvericiation email to users for safe signup. User signup with email,\n\t\t\t\t\t\t\t\tpassword => verification email sent to his/her email => user clicks\n\t\t\t\t\t\t\t\tverification button => user data is activated in database => user\n\t\t\t\t\t\t\t\tcan login.\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li id=\"text\" className=\"list-item\">\n\t\t\t\t\t\t\t\tdotenv: to hide crucial variable such as port number, jwt secret\n\t\t\t\t\t\t\t\tcode.\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li id=\"text\" className=\"list-item\">\n\t\t\t\t\t\tRealm-Database: Used Realm database because it is a strong mobile\n\t\t\t\t\t\tapplication nosql database. I love to modify data structure and schema that\n\t\t\t\t\t\tare document base because of its scalability and easy manipulation.\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t<p class=\"card-text\" id=\"text\" style={{'font-weight': 'bold'}}>\n\t\t\t\t\tIn app authentication --- TEST Email: test@gmail.com || TEST password: test1234\n\t\t\t\t</p>\n\t\t\t\t<p class=\"card-text\" id=\"text\">\n\t\t\t\t\tFor IPhone user testflight link{`\\n`}(need to download testflight and click link\n\t\t\t\t\tthrough ios device):{' '}\n\t\t\t\t\t<a href=\"https://testflight.apple.com/join/XswI66h5\" target=\"_blank\">\n\t\t\t\t\t\tios testflight link\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t\t<p class=\"card-text\" id=\"text\">\n\t\t\t\t\tAndroid and Web browser link (will take some time start):{' '}\n\t\t\t\t\t<a href=\"https://expo.io/@chlalstjr7/GRIP\" target=\"_blank\">\n\t\t\t\t\t\tWeb or Android link\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t\t<p class=\"card-text\" id=\"text\">\n\t\t\t\t\tFrontEnd Github repo:{' '}\n\t\t\t\t\t<a href=\"https://github.com/PhilipChoiFelipe/grip_ReactNative\" target=\"_blank\">\n\t\t\t\t\t\tFE Source Code Link\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t\t<p class=\"card-text\" id=\"text\">\n\t\t\t\t\tBackEnd Github repo:{' '}\n\t\t\t\t\t<a href=\"https://github.com/PhilipChoiFelipe/grip_Alpha\" target=\"_blank\">\n\t\t\t\t\t\tBE Source Code Link\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Grip;","import React from 'react';\n\n//Components\nimport Grip from './grip';\nimport ProjectCard from './projectCard';\n//util\nimport { Route } from 'react-router-dom';\n//design\nimport './projects.scss';\n\nconst Projects = () => {\n\treturn (\n\t\t<div className=\"projects-container\">\n\t\t\t<div className=\"project-card\">\n\t\t\t\t<div class=\"card border-info mb-5\">\n\t\t\t\t\t<div class=\"card-header bg-transparent\">\n\t\t\t\t\t\t<h3 id=\"header\">Full-Stack mobile app development</h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t<Grip/>\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"card-footer\" class=\"card-footer bg-transparent\" id=\"text\">\n\t\t\t\t\t\tUsed Tech Stacks: ReactJS - React-Native - ExpressJS - Realm DB\n\t\t\t\t\t\t<a id=\"link-item\" href=\"https://expo.io/@chlalstjr7/GRIP\" class=\"btn btn-dark\" target=\"_blank\">\n\t\t\t\t\t\t\tCheck Out\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"project-card\">\n\t\t\t\t<div class=\"card border-info mb-5\">\n\t\t\t\t\t<div class=\"card-header bg-transparent\">\n\t\t\t\t\t\t<h3 id=\"header\">Java Programmed Game Development</h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t<h4 class=\"card-title\" id=\"header\">\n\t\t\t\t\t\t\tguNdoWn\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t<p class=\"card-text\" id=\"text\">\n\t\t\t\t\t\t\tCreated game with pure Java language without any external modules. Hand\n\t\t\t\t\t\t\tdrawn pictures, data structure and algorithms to create maps, objects,\n\t\t\t\t\t\t\tand actions\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"card-footer\" class=\"card-footer bg-transparent\" id=\"text\">\n\t\t\t\t\t\tUsed Tech Stacks: Java\n\t\t\t\t\t\t<a id=\"link-item\" href=\"#grip\" class=\"btn btn-dark\">\n\t\t\t\t\t\t\tCheck Out\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"project-card\">\n\t\t\t\t<div class=\"card border-info mb-5\">\n\t\t\t\t\t<div class=\"card-header bg-transparent\">\n\t\t\t\t\t\t<h3 id=\"header\">Full-Stack Web Development</h3>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t<h4 class=\"card-title\" id=\"header\">\n\t\t\t\t\t\t\tMiliMili\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t<p class=\"card-text\" id=\"text\">\n\t\t\t\t\t\t\tCreated Shareable diary platform for soldiers to share their tough days.\n\t\t\t\t\t\t\tPeople can post their story and others can comment. Users can get\n\t\t\t\t\t\t\tnotification whenever other comments! || TEST Email: test@gmail.com ||\n\t\t\t\t\t\t\tTEST password: 123456\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"card-footer\" class=\"card-footer bg-transparent\" id=\"text\">\n\t\t\t\t\t\tUsed Tech Stacks: ReactJS - Firebase\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tid=\"link-item\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\thref=\"https://philipchoifelipe.github.io/milimili/?#/others\"\n\t\t\t\t\t\t\tclass=\"btn btn-dark\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCheck Out\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Projects;\n// <ProjectCard\n// \t\t\t\theader=\"Full-Stack mobile app development\"\n// \t\t\t\ttitle=\"Grip\"\n// \t\t\t\tdescription=\"Developed full-stack mobile application, GRIP, which helps users to get track and motivated on their pullup exercise.\"\n// \t\t\t\tstack={'ReactJS - React-Native - ExpressJS - Realm DB'}\n// \t\t\t\texternal={false}\n// \t\t\t\tlink={'#grip'}\n// \t\t\t/>\n// \t\t\t<ProjectCard\n// \t\t\t\theader=\"Java Programmed Game Development\"\n// \t\t\t\ttitle=\"guNdoWn\"\n// \t\t\t\tdescription=\"Created game with pure Java language without any external modules. Hand drawn pictures, data structure and algorithms to create maps, objects, and actions\"\n// \t\t\t\tstack={'Java'}\n// \t\t\t/>\n// \t\t\t<ProjectCard\n// \t\t\t\theader=\"Full-Stack Web Development\"\n// \t\t\t\ttitle=\"MiliMili\"\n// \t\t\t\tdescription=\"Created Shareable diary platform for soldiers to share their tough days. People can post their story and others can comment. Users can get notification whenever other comments! || TEST Email: test@gmail.com || TEST password: 123456\"\n// \t\t\t\tstack={'ReactJS - Firebase'}\n// \t\t\t\texternal={true}\n// \t\t\t\tlink={'https://philipchoifelipe.github.io/milimili/?#/others'}\n// \t\t\t/>\n//<Route path = \"projects/grip\" component={Grip}/>","import React from 'react';\nimport './programLang.scss';\n\nconst ProgramLang = () => {\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<h1 id=\"header\">Experienced In..</h1>\n\t\t\t<div className=\"icons\">\n\n\t\t\t\t<div className=\"icon-sector\">\n\t\t\t\t\t<i class=\"devicon-html5-plain colored\" id=\"icon\"></i>\n\t\t\t\t\t<p id=\"text\" className=\"icon-text\">Html</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"icon-sector\">\n\t\t\t\t\t<i class=\"devicon-css3-plain colored\" id=\"icon\"></i>\n\t\t\t\t\t<p id=\"text\">Css</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"icon-sector\">\n\t\t\t\t\t<i class=\"devicon-bootstrap-plain\" id=\"icon\"></i>\n\t\t\t\t\t<p id=\"text\">BootStrap</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"icon-sector\">\n\t\t\t\t\t<i class=\"devicon-javascript-plain colored\" id=\"icon\"></i>\n\t\t\t\t\t<p id=\"text\">Javascript</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"icon-sector\">\n\t\t\t\t\t<i class=\"devicon-react-original colored\" id=\"icon\"></i>\n\t\t\t\t\t<p id=\"text\">React/React-native</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"icon-sector\">\n\t\t\t\t\t<i class=\"devicon-android-plain\" id=\"icon\"></i>\n\t\t\t\t\t<p id=\"text\">Kotlin</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"icon-sector\">\n\t\t\t\t\t<i class=\"devicon-express-original\" id=\"icon\"></i>\n\n\t\t\t\t\t<p id=\"text\">Express/Koa</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"icon-sector\">\n\t\t\t\t\t<i class=\"devicon-java-plain\" id=\"icon\"></i>\n\t\t\t\t\t<p id=\"text\">Java</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"icon-sector\">\n\t\t\t\t\t<i class=\"devicon-go-plain colored\" id=\"icon\"></i>\n\t\t\t\t\t<p id=\"text\">GoLang</p>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"icon-sector\">\n\t\t\t\t\t<i class=\"devicon-mongodb-plain-wordmark colored\" id=\"icon\"></i>\n\t\t\t\t\t<p id=\"text\">MongoDB / RealmDB</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"icon-sector\">\n\t\t\t\t\t<i class=\"devicon-mysql-plain colored\" id=\"icon\"></i>\n\t\t\t\t\t<p id=\"text\">MySql</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"icon-sector\">\n\t\t\t\t\t<i class=\"devicon-git-plain\" id=\"icon\"></i>\n\t\t\t\t\t<p id=\"text\">Git</p>\n\t\t\t\t</div>\n\t\t\t\t\n\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ProgramLang;","import React from 'react';\n\n//components \nimport Background from './components/background';\nimport Projects from './components/projects/projects';\nimport ProgramLang from './components/programLang/programLang';\n//util \nimport { Route, Link, Switch } from 'react-router-dom';\n\n//design\nimport './App.scss';\n\nconst App = () => {\n\treturn (\n\t\t<div className=\"container\" class=\"container\">\n\t\t\t<div className=\"banner\">\n\t\t\t\t<h1 className=\"name\" id=\"header\">\n\t\t\t\t\tDeveloper Minseok Choi\n\t\t\t\t</h1>\n\t\t\t</div>\n\t\t\t<div className=\"information\">\n\t\t\t\t<Background />\n\t\t\t\t<hr />\n\t\t\t\t<ul className=\"link-list\">\n\t\t\t\t\t<li id=\"link-item1\">\n\t\t\t\t\t\t<Link to =\"/projects\" style={{ textDecoration: 'none' }}><h2 className=\"projects\" id=\"header\">Projects</h2></Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li id=\"link-item2\">\n\t\t\t\t\t\t<Link id=\"link-item\" to =\"/programLang\" style={{ textDecoration: 'none' }}><h2 className=\"projects\" id=\"header\">Program Languages</h2></Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li id=\"link-item3\">\n\t\t\t\t\t\t<Link id=\"link-item\" to =\"/Languages\" style={{ textDecoration: 'none' }}><h2 className=\"projects\" id=\"header\">Language</h2></Link>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/projects\" component={Projects}/>\n\t\t\t\t<Route path=\"/programLang\" component={ProgramLang}/>\n\t\t\t</Switch>\n\t\t</div>\n\t);\n};\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}